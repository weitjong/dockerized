#
# Copyright (c) 2018-2022 Yao Wei Tjong. All rights reserved.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
#

---

name: DBE retagger
on:
  workflow_dispatch:
    inputs:
      project:
        description: Projects
        required: true
        default: urho3d
      platform:
        description: Platforms
        required: true
        default: base android arm linux mingw rpi web
      tag:
        description: New tag
        required: true
        default: latest
jobs:
  init:
    name: Init
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Parse inputs
        id: parse
        run: |
          rake parse[project,'${{ github.event.inputs.project }}'] #'
          rake parse[platform,'${{ github.event.inputs.platform }}'] #'
    outputs:
      project: ${{ steps.parse.outputs.project }}
      platform: ${{ steps.parse.outputs.platform }}
  project:
    name: Project
    runs-on: ubuntu-latest
    needs: init
    strategy:
      fail-fast: false
      matrix:
        project: ${{ fromJSON(needs.init.outputs.project) }}
        platform: ${{ fromJSON(needs.init.outputs.platform) }}
    env:
      SRC_IMAGE: weitjong/dockerized:${{ matrix.project }}-${{ matrix.platform }}
      TGT_IMAGE: ${{ matrix.project }}/dockerized-${{ matrix.platform }}
      TAG: ${{ github.event.inputs.tag }}
    steps:
      - name: Retag
        run: |
          echo ${{ secrets.DOCKER_PASSWORD }} |docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          docker pull $SRC_IMAGE
          docker tag $SRC_IMAGE $TGT_IMAGE:$TAG
          docker push $TGT_IMAGE:$TAG
          docker logout

...

# vi: set ts=2 sw=2 expandtab:
